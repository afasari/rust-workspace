name: Rust CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/todos_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: todos_test

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./todo

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev postgresql-client

    - name: Verify PostgreSQL connection
      run: |
        PGPASSWORD=${{ env.POSTGRES_PASSWORD }} psql -h localhost -U ${{ env.POSTGRES_USER }} -d ${{ env.POSTGRES_DB }} -c '\l'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          todo/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('todo/Cargo.lock') }}

    - name: Run migrations
      run: |
        cargo install diesel_cli --no-default-features --features postgres
        diesel migration run

    - name: Run tests
      run: |
        cargo test --lib
        cargo test --test integration_tests

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./todo

    steps:
    - uses: actions/checkout@v3

    - name: Build
      run: cargo build --release

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./todo/target/release

    - name: Wait for GitHub Pages
      run: |
        sleep 60  # Wait for GitHub Pages to deploy

    - name: Verify deployment
      run: |
        DEPLOY_URL="https://${{ github.repository_owner }}.github.io/rust-workspace"
        HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $DEPLOY_URL)
        if [ $HTTP_STATUS -eq 200 ]; then
          echo "✅ Deployment successful! Site is accessible at $DEPLOY_URL"
        else
          echo "❌ Deployment verification failed. Status code: $HTTP_STATUS"
          exit 1
        fi